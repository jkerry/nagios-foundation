package cmd

import (
	"fmt"
	"os"

	"github.com/ncr-devops-platform/nagiosfoundation/cmd/initcmd"
	"github.com/ncr-devops-platform/nagiosfoundation/lib/app/nagiosfoundation"
	"github.com/spf13/cobra"
)

// Execute runs the root command
func Execute() {
	var warning, critical int
	var metricName string

	var rootCmd = &cobra.Command{
		Use:   "check_available_memory",
		Short: "Determine if memory used exceeds percentage threshold.",
		Long: `Determines the percentage of memory used and if over the --criticial
threshold issue a CRITICAL response, then check if over the --warning threshold,
issue a WARNING response. Otherwise, an OK response is issued.`,
		Run: func(cmd *cobra.Command, args []string) {
			cmd.ParseFlags(os.Args)
			msg, retval := nagiosfoundation.CheckAvailableMemory(warning, critical, metricName)

			fmt.Println(msg)
			os.Exit(retval)
		},
	}

	initcmd.AddVersionCommand(rootCmd)

	rootCmd.Flags().IntVarP(&warning, "warning", "w", 85, "the memory threshold to issue a warning alert")
	rootCmd.Flags().IntVarP(&critical, "critical", "c", 95, "the memory threshold to issue a critical alert")
	rootCmd.Flags().StringVarP(&metricName, "metric_name", "m", "available_memory_percent", "the name of the metric generated by this check")

	if err := rootCmd.Execute(); err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}
